'use strict';
'require rpc';
'require view';
'require form';
'require tools.widgets as widgets';

var callFileList = rpc.declare({
	object: 'file',
	method: 'list',
	params: [ 'path' ],
	expect: { entries: [] },
	filter: function(list, params) {
		var rv = [];
		for (var i = 0; i < list.length; i++)
			if (list[i].name.match(/^ttyUSB/) || list[i].name.match(/^ttyS/) || list[i].name.match(/^ttyACM/))
				rv.push(params.path + list[i].name);
		return rv.sort();
	}
});


return view.extend({
	render: function() {
		var m, s, o;

		m = new form.Map('bacnet_dev', 'BACnet server');
		m.tabbed = false;
		s = m.section(form.TypedSection, 'dev', _('interface configuration section'));
		s.anonymous = false;
		s.addremove = true;
		s.addbtntitle = _('Add new interface...');
		o = s.option(form.Flag, 'enable', _('Enabled'));
		o.rmempty = false;
		o = s.option(form.Flag, 'debug', _('debug'));
		o.rmempty = false;
		o = s.option(form.Value, "Id", _("Id"), "4712");
		o.optional = false;
		o.placeholder = 4712;
		o.datatype = "uinteger";
		o = s.option(form.Value, "Name", _("Name"), "Name");
		o.optional = false;
		o.placeholder = "SimpleServer";
		o.datatype = "string";
		o = s.option(form.Value, "Description", _("Description"), "Description");
		o.optional = true;
		o.datatype = "string";
		o.placeholder = "Openwrt Router";
		o = s.option(form.Value, "Location", _("Location"), "Location");
		o.optional = true;
		o.placeholder = "Location";
		o.datatype = "string";
		o = s.option(form.ListValue, 'bacdl', _('Data link'));
		o.value('arcnet','Arcnet');
		o.value('bip','IPv4');
		o.value('bip6','IPv6');
		o.value('ethernet','Ethernet');
		o.value('mstp','MSTP/RS485');
		o.optional = true;
		//o = s.option(form.Value, "iface", _("Interface"), _("The interface bacnet should serve."));
		o = s.option(widgets.DeviceSelect, 'iface', _('Device name', 'eth0'));
		o.depends('bacdl', 'arcnet');
		o.depends('bacdl', 'bip');
		o.depends('bacdl', 'bip6');
		o.depends('bacdl', 'ethernet');
		o.datatype = "string";
		o = s.option(form.Value, "serial", _("Serial Port"), _("The Serial Port bacnet should serve. /dev/ttyUSB0"));
		o.ucioption = 'iface';
		o.depends('bacdl', 'mstp');
		o.datatype = "string";
		o.placeholder = "/dev/ttyUSB0";
		o.load = function(section_id) {
			return callFileList('/dev/').then(L.bind(function(devices) {
				for (var i = 0; i < devices.length; i++)
					this.value(devices[i]);
				return form.Value.prototype.load.apply(this, [section_id]);
			}, this));
		};

		o = s.option(form.Value, "port", _("IP Port"), "47808");
		o.depends('bacdl', 'bip');
		o.depends('bacdl', 'bip6');
		o.optional = true;
		o.placeholder = 47808;
		o.datatype = "portrange";
		o = s.option(form.Value, "broadcast", _("Broadcast addr"), "65294=ff0e 65282=ff02");
		o.depends('bacdl', 'bip');
		o.depends('bacdl', 'bip6');
		o.optional = true;
		o.placeholder = "65294";
		o.datatype = "portrange";
		o = s.option(form.Value, "bbmd_addr", _("BBMD IP Adresse"), "");
		o.depends('bacdl', 'bip');
		o.depends('bacdl', 'bip6');
		o.optional = true;
		o.datatype = "host";
		o = s.option(form.Value, "bbmd_port", _("BBMD IP Port"), "47808");
		o.depends('bacdl', 'bip');
		o.depends('bacdl', 'bip6');
		o.optional = true;
		o.placeholder = 47808;
		o.datatype = "portrange";
		o = s.option(form.Value, "bdt_addr_1", _("BDT IP Adresse 1"), "");
		o.depends('bacdl', 'bip');
		o.depends('bacdl', 'bip6');
		o.optional = true;
		o.datatype = "host";
		o = s.option(form.Value, "bdt_port_1", _("BDT IP Port 1"), "47808");
		o.depends('bacdl', 'bip');
		o.depends('bacdl', 'bip6');
		o.optional = true;
		o.placeholder = 47808;
		o.datatype = "portrange";
		o = s.option(form.Value, "bdt_mask_1", _("Broadcast mask"), "192.168.1.255");
		o.depends('bacdl', 'bip');
		o.optional = true;
		o.placeholder = "192.168.1.255";
		o.datatype = "ip4addr";
		o = s.option(form.Value, "bdt_addr_2", _("BDT IP Adresse 2"), "");
		o.depends('bacdl', 'bip');
		o.depends('bacdl', 'bip6');
		o.optional = true;
		o.datatype = "host";
		o = s.option(form.Value, "bdt_port_2", _("BDT IP Port 2"), "47808");
		o.depends('bacdl', 'bip');
		o.depends('bacdl', 'bip6');
		o.optional = true;
		o.placeholder = 47808;
		o.datatype = "portrange";
		o = s.option(form.Value, "bdt_mask_2", _("Broadcast mask"), "192.168.1.255");
		o.depends('bacdl', 'bip');
		o.optional = true;
		o.placeholder = "192.168.1.255";
		o.datatype = "ip4addr";
		o = s.option(form.Value, "bdt_addr_3", _("BDT IP Adresse 3"), "");
		o.depends('bacdl', 'bip');
		o.depends('bacdl', 'bip6');
		o.optional = true;
		o.datatype = "host";
		o = s.option(form.Value, "bdt_port_3", _("BDT IP Port 3"), "47808");
		o.depends('bacdl', 'bip');
		o.depends('bacdl', 'bip6');
		o.optional = true;
		o.placeholder = 47808;
		o.datatype = "portrange";
		o = s.option(form.Value, "bdt_mask_3", _("Broadcast mask"), "192.168.1.255");
		o.depends('bacdl', 'bip');
		o.optional = true;
		o.placeholder = "192.168.1.255";
		o.datatype = "ip4addr";
		o = s.option(form.Value, "mac", _("MAC for MSTP"), "1");
		o.depends('bacdl', 'mstp');
		o.optional = true;
		o.rmempty = true;
		o.datatype = "range(0,127)";
		o.placeholder = 1;
		o = s.option(form.Value, "max_master", _("MAX Master for MSTP"), "127");
		o.depends('bacdl', 'mstp');
		o.optional = true;
		o.rmempty = true;
		o.datatype = "range(0,127)";
		o.placeholder = 127;
		o = s.option(form.Value, "max_frames", _("MAX Frames for MSTP"), "128");
		o.depends('bacdl', 'mstp');
		o.optional = true;
		o.rmempty = true;
		o.datatype = "range(0,128)";
		o.modalonly = true;
		o.placeholder = 128;
		o = s.option(form.ListValue, "baud", _("Datarate"), "38400");
		o.depends('bacdl', 'mstp');
		o.value("9600");
		o.value("19200");
		o.value("38400");
		o.value("57600");
		o.value("115200");
		o.optional = true;
		o = s.option(form.ListValue, "parity_bit", _("Parity Bit"), "N");
		o.depends('bacdl', 'mstp');
		o.value("N");
		o.value("O");
		o.value("E");
		o.optional = true;
		o = s.option(form.ListValue, "data_bit", _("Data Bit"), "8");
		o.depends('bacdl', 'mstp');
		o.value("5");
		o.value("6");
		o.value("7");
		o.value("8");
		o.optional = true;
		o = s.option(form.ListValue, "stop_bit", _("Stop Bit"), "1");
		o.depends('bacdl', 'mstp');
		o.value("1");
		o.value("2");
		o.optional = true;
		o = s.option( form.Value, "apdu_timeout", _("APDU timeout in ms"), "0");
		o.optional = true;
		o.rmempty = true;
		o.datatype = "uinteger";
		o = s.option( form.Value, "apdu_retries", _("APDU retries"), "3");
		o.optional = true;
		o.rmempty = true;
		o.datatype = "uinteger";
		o = s.option( form.Value, "invoke_id", _("Invoke ID"), "0");
		o.optional = true;
		o.rmempty = true;
		o.datatype = "uinteger";
		o = s.option( form.Value, "net", _("NET Number"), "6661");
		o.optional = true;
		o.rmempty = true;
		o.datatype = "portrange";
		return m.render();
	}
});
